<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="class_programme" kind="class" prot="public">
    <compoundname>Programme</compoundname>
    <basecompoundref refid="class_litterale" prot="public" virt="non-virtual">Litterale</basecompoundref>
    <includes refid="_litterale_8h" local="no">Litterale.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_programme_1a2801ce870979ba29438ff808324d736" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Programme::prog</definition>
        <argsstring></argsstring>
        <name>prog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>chaine de caracteres representant le contenu du programme </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="121" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_programme_1714382be5455a92d17099406517df95f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Programme::Programme</definition>
        <argsstring>(string s)</argsstring>
        <name>Programme</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Constructeur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>: chaine de caractere representant le contenu du programme </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="127" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_programme_18a4a4047620cf9bf7b6682e4a8c0b850" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Programme::affiche</definition>
        <argsstring>() const </argsstring>
        <name>affiche</name>
        <reimplements refid="class_litterale_1d67121b10b76b2283940c52cb3b26185">affiche</reimplements>
        <briefdescription>
<para>Redefinition de la fonction d&apos;affichage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="131" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_programme_1640770a1987a79ee81c985966254a959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Programme::getProg</definition>
        <argsstring>()</argsstring>
        <name>getProg</name>
        <briefdescription>
<para>Accesseur. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>chaine de caracteres representant le contenu du programme </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="141" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_programme_1db3fc4dc8b2751b3775a53fa245606d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Programme::edit</definition>
        <argsstring>(string s)</argsstring>
        <name>edit</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Editeur : permet de modifier le contenu du programme. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>: chaine de caracteres representant le nouveau contenu du programme </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="146" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_programme_1df42f9872a754beefe020294f585f9a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_programme" kindref="compound">Programme</ref> *</type>
        <definition>Programme* Programme::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="class_litterale_1aaadc01ca2bb0c9210f9de083130768b">clone</reimplements>
        <briefdescription>
<para>Redefinition de la fonction de clonage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="150" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="150" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classe representant un programme, c&apos;est a dire une suite d&apos;instructions (heritage de <ref refid="class_litterale" kindref="compound">Litterale</ref>). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="63">
        <label>Programme</label>
        <link refid="class_programme"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>Litterale</label>
        <link refid="class_litterale"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="65">
        <label>Programme</label>
        <link refid="class_programme"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>Litterale</label>
        <link refid="class_litterale"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" line="119" bodyfile="C:/Users/Clément/LO21/Master/LO21---P16/TestLO21/Litterale.h" bodystart="119" bodyend="151"/>
    <listofallmembers>
      <member refid="class_programme_18a4a4047620cf9bf7b6682e4a8c0b850" prot="public" virt="virtual"><scope>Programme</scope><name>affiche</name></member>
      <member refid="class_programme_1df42f9872a754beefe020294f585f9a6" prot="public" virt="virtual"><scope>Programme</scope><name>clone</name></member>
      <member refid="class_programme_1db3fc4dc8b2751b3775a53fa245606d2" prot="public" virt="non-virtual"><scope>Programme</scope><name>edit</name></member>
      <member refid="class_programme_1640770a1987a79ee81c985966254a959" prot="public" virt="non-virtual"><scope>Programme</scope><name>getProg</name></member>
      <member refid="class_litterale_1a974ab68a06e8a8b15d04ecd4ce8065a" prot="public" virt="non-virtual"><scope>Programme</scope><name>getType</name></member>
      <member refid="class_litterale_1a0a02717ec75f502f1afdb6ac597efac" prot="public" virt="non-virtual"><scope>Programme</scope><name>Litterale</name></member>
      <member refid="class_litterale_1eae743dc3e6055579ec749b708c57bc9" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator!=</name></member>
      <member refid="class_litterale_1b88999156adbab96ea31e255dd3da85d" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator&lt;</name></member>
      <member refid="class_litterale_176f566c89aa02934839f159f8d627021" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator&lt;=</name></member>
      <member refid="class_litterale_1257dc6d6f3c4d8458d45be92ceede634" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator==</name></member>
      <member refid="class_litterale_13495fcc6429947a6625a11e0afa0b9c6" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator&gt;</name></member>
      <member refid="class_litterale_14a4dfdd26a03ecd6c38d1f7e6521b549" prot="public" virt="non-virtual"><scope>Programme</scope><name>operator&gt;=</name></member>
      <member refid="class_programme_1a2801ce870979ba29438ff808324d736" prot="private" virt="non-virtual"><scope>Programme</scope><name>prog</name></member>
      <member refid="class_programme_1714382be5455a92d17099406517df95f" prot="public" virt="non-virtual"><scope>Programme</scope><name>Programme</name></member>
      <member refid="class_litterale_1ab5099a9b2acefce3bc3da9487e0ad78" prot="protected" virt="non-virtual"><scope>Programme</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
